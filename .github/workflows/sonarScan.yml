
name: ‚ò£ Sonar Scan
on:
  schedule: [{cron: "20 8 * * *"}]
  pull_request:
    types: [opened, reopened]
    branches:
      - staging
jobs:
  sonar-scan:
    name: ‚ò£ Sonar Scan
    runs-on: self-hosted
    steps:
      - name: üöö Checkout
        uses: actions/checkout@master
        if: startsWith(github.head_ref, 'renovate/') == false
        with:
          fetch-depth: 0

      - name: üõ† Set up JDK 11 
        uses: actions/setup-java@v2
        if: startsWith(github.head_ref, 'renovate/') == false
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Install dependencies
        if: 1==2
        run: npm ci

      - name: Install Playwright
        if: 1==2
        run: npx playwright install --with-deps
        
      - name: Print env vars
        run: env | sort

      - name: üîç Cache SonarCloud packages
        uses: actions/cache@v2
        if: startsWith(github.head_ref, 'renovate/') == false
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: üîç Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        if: startsWith(github.head_ref, 'renovate/') == false
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: ‚ò¢ Install SonarCloud scanner
        if: startsWith(github.head_ref, 'renovate/') == false
        run: curl -XGET https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip -o sonar.zip && unzip -q ./sonar.zip && mv *linux scanner && export PATH=$PATH:$(pwd)/scanner/bin

      - name: ‚ò¢ Build and analyze
        if: startsWith(github.head_ref, 'renovate/') == false
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./scanner/bin/sonar-scanner -Dsonar.projectKey="billz_e2e_tests" -Dsonar.sources=. -Dsonar.host.url=https://sonar.billz.work -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
